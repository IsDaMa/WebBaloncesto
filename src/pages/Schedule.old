// src/pages/Schedule.jsx
import React, { useState, useEffect } from 'react';
import { games } from '../data/games';

const Schedule = () => {
  const [filter, setFilter] = useState('all');
  
  const currentDate = new Date();
  
  const upcomingGames = games.filter(game => new Date(game.date) >= currentDate);
  const pastGames = games.filter(game => new Date(game.date) < currentDate);
  
  const filteredGames = filter === 'all' ? games : 
                       filter === 'upcoming' ? upcomingGames : pastGames;
  
  return (
    <div className="min-h-screen bg-gray-50 py-8 md:py-12">
      <div className="container mx-auto px-4">
        {/* Page Title */}
        <div className="text-center mb-10">
          <h1 className="text-3xl md:text-4xl font-bold text-deepGreen mb-2">Calendario</h1>
          <div className="w-24 h-1 bg-gold mx-auto mb-4"></div>
          <p className="text-gray-700 max-w-3xl mx-auto">
            Consulta los próximos partidos y los resultados de nuestro equipo en la temporada actual.
          </p>
        </div>
        
        {/* Filter Tabs */}
        <div className="mb-8 flex flex-wrap justify-center">
          <button
            onClick={() => setFilter('all')}
            className={`px-6 py-3 mx-1 mb-2 rounded-full text-sm md:text-base font-medium transition-colors ${
              filter === 'all' 
                ? 'bg-deepGreen text-white'
                : 'bg-gray-200 text-gray-700 hover:bg-gray-300'
            }`}
          >
            Todos
          </button>
          <button
            onClick={() => setFilter('upcoming')}
            className={`px-6 py-3 mx-1 mb-2 rounded-full text-sm md:text-base font-medium transition-colors ${
              filter === 'upcoming' 
                ? 'bg-deepGreen text-white'
                : 'bg-gray-200 text-gray-700 hover:bg-gray-300'
            }`}
          >
            Próximos
          </button>
          <button
            onClick={() => setFilter('past')}
            className={`px-6 py-3 mx-1 mb-2 rounded-full text-sm md:text-base font-medium transition-colors ${
              filter === 'past' 
                ? 'bg-deepGreen text-white'
                : 'bg-gray-200 text-gray-700 hover:bg-gray-300'
            }`}
          >
            Jugados
          </button>
        </div>
        
        {/* Calendar List */}
        <div className="max-w-4xl mx-auto">
          {filteredGames.length === 0 ? (
            <div className="text-center py-8">
              <p className="text-gray-500">No hay partidos para mostrar.</p>
            </div>
          ) : (
            filteredGames.map((game, index) => {
              const gameDate = new Date(game.date);
              const isPast = gameDate < currentDate;
              
              return (
                <div 
                  key={game.id} 
                  className={`mb-4 bg-white rounded-lg overflow-hidden shadow-md border-l-4 ${
                    isPast && game.score 
                      ? game.homeTeam === "CB Cártama" 
                        ? game.score.home > game.score.away 
                          ? "border-green-500" 
                          : "border-red-500"
                        : game.score.away > game.score.home 
                          ? "border-green-500" 
                          : "border-red-500"
                      : "border-gold"
                  }`}
                >
                  <div className="p-4 md:p-6">
                    {/* Date and Competition */}
                    <div className="flex flex-col md:flex-row md:justify-between md:items-center mb-4">
                      <div className="flex items-center mb-2 md:mb-0">
                        <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 text-gold mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                        </svg>
                        <span className="font-medium">
                          {gameDate.toLocaleDateString('es-ES', { weekday: 'long', day: 'numeric', month: 'long', year: 'numeric' })}
                        </span>
                      </div>
                      <div className="flex items-center">
                        <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 text-gold mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M7 20l4-16m2 16l4-16M6 9h14M4 15h14" />
                        </svg>
                        <span>{game.competition}</span>
                      </div>
                    </div>
                    
                    {/* Time and Location */}
                    <div className="flex flex-col md:flex-row md:justify-between md:items-center mb-4 text-sm text-gray-600">
                      <div className="flex items-center mb-2 md:mb-0">
                        <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 text-gray-500 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                        </svg>
                        <span>{gameDate.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' })}</span>
                      </div>
                      <div className="flex items-center">
                        <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 text-gray-500 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                        </svg>
                        <span>{game.location}</span>
                      </div>
                    </div>
                    
                    {/* Teams */}
                    <div className="flex flex-col md:flex-row items-center justify-between">
                      <div className="flex flex-col items-center md:items-start md:flex-row md:w-2/5">
                        <div className="w-12 h-12 bg-gray-200 rounded-full flex items-center justify-center md:mr-3 mb-2 md:mb-0">
                          <span className={`font-bold ${game.homeTeam === "CB Cártama" ? "text-deepGreen" : "text-gray-700"}`}>
                            {game.homeTeam.split(" ").map(word => word[0]).join("")}
                          </span>
                        </div>
                        <span className="font-medium text-center md:text-left">{game.homeTeam}</span>
                      </div>
                      
                      {isPast && game.score ? (
                        <div className="my-4 md:my-0 md:mx-4 text-center">
                          <div className="font-bold text-xl md:text-2xl">
                            {game.score.home} - {game.score.away}
                          </div>
                          <div className="text-xs text-gray-500">Final</div>
                        </div>
                      ) : (
                        <div className="my-4 md:my-0 md:mx-4 text-center">
                          <div className="text-sm bg-gold/10 text-gold px-3 py-1 rounded-full font-medium">
                            Próximamente
                          </div>
                        </div>
                      )}
                      
                      <div className="flex flex-col items-center md:items-end md:flex-row-reverse md:w-2/5">
                        <div className="w-12 h-12 bg-gray-200 rounded-full flex items-center justify-center md:ml-3 mb-2 md:mb-0">
                          <span className={`font-bold ${game.awayTeam === "CB Cártama" ? "text-deepGreen" : "text-gray-700"}`}>
                            {game.awayTeam.split(" ").map(word => word[0]).join("")}
                          </span>
                        </div>
                        <span className="font-medium text-center md:text-right">{game.awayTeam}</span>
                      </div>
                    </div>
                    
                    {/* Game details or result summary */}
                    {game.summary && (
                      <div className="mt-4 pt-4 border-t border-gray-200 text-gray-600 text-sm">
                        {game.summary}
                      </div>
                    )}
                  </div>
                </div>
              );
            })
          )}
        </div>
        
        {/* Calendar Download */}
        <div className="text-center mt-12">
          <a 
            href="#" 
            className="inline-flex items-center bg-deepGreen hover:bg-[#0A3A1D] text-white py-2 px-6 rounded-full text-lg font-medium transition-colors"
          >
            <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
            </svg>
            Descargar calendario
          </a>
        </div>
      </div>
    </div>
  );
};

export default Schedule;